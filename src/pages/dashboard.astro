---
// export const prerender = true;
import { getFirestore } from "firebase-admin/firestore";
import { Prism } from "@astrojs/prism";
import type { User } from "@supabase/supabase-js";

import { app } from "../firebase/server";
import supabase from "../supabase/client";
import Layout from "../layouts/Layout.astro";
import LocationTag from "../components/locations/LocationTag.astro";

// GET SESSION TOKEN FROM COOKIES
const {
    data: { session },
} = await supabase.auth.getSession();

if (!session) {
    return Astro.redirect("/signin");
}

const user = (await supabase.auth.getUser()).data.user as User;
const sessionCookieFormatted = session?.access_token.match(/.{1,80}/g)?.join("\n") ?? "error.";

/* DATABASE QUERY */
interface Friend {
    id: string;
    name: string;
    age: number;
    isBestFriend: boolean;
}

const db = getFirestore(app);
const friendsRef = db.collection("data");
const friendsSnapshot = await friendsRef.get();
const friends = friendsSnapshot.docs.map(doc => ({
    id: doc.id,
    ...doc.data(),
})) as Friend[];
---

<Layout title="dashboard" animated={true}>
    <h1>Welcome {user.user_metadata.name}</h1>
    <p>We are happy to see you here.</p>
    <h3 style="margin-bottom: 2px;">SessionID Cookie:</h3>
    <Prism code={sessionCookieFormatted} />
    <h3>User Claims</h3>
    <Prism code={`${JSON.stringify(user.user_metadata)}`} />
    <form action="/api/auth/signout">
        <button type="submit">Sign out</button>
    </form>

    <div id="fillable"></div>

    <br />

    <LocationTag borderColor="#FFFF00" tagColor="#e7689c">SnowFlake</LocationTag>

    <h1>Friends</h1>
    <ul>
        {
            friends.map(friend => (
                <li>
                    <a href={`/data/${friend.id}`}>{friend.name}</a>
                    <span>({friend.age})</span>
                    <strong>{friend.isBestFriend ? "Bestie" : "Friend"}</strong>
                    <a href={`/edit/${friend.id}`}>Edit</a>
                </li>
            ))
        }
    </ul>
</Layout>
