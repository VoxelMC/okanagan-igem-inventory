---
import Layout from "../../layouts/Layout.astro";
import LocationsFormText from "../../components/locations/LocationsFormText.astro";
import LocationsFormTextArea from "../../components/locations/LocationsFormTextArea.astro";
import ColorPicker from "../../components/forms/ColorPicker.astro";
import LocationTag from "../../components/locations/LocationTag.astro";

import { app } from "../../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { LocationSchema, LocationType } from "../../types/schemas";

const db = getFirestore(app);
const dbReference = db.collection("locations");
const snapshot = await dbReference.get();
const locations = snapshot.docs.map(doc => ({
    id: doc.id,
    ...doc.data(),
})) as LocationSchema[];

const locationOrder = Object.values(LocationType);

const sortedLocations = locations.sort((a, b) => locationOrder.indexOf(a.type) - locationOrder.indexOf(b.type));
---

<Layout title="Add A Location">
    <form id="registerForm" class="flex my-20 w-full justify-center" action="/api/auth/register" method="post">
        <div class="prose-sm mt-8 flex flex-col w-5/6 rounded-xl bg-neutral self-start p-10">
            <h1 class="mb-0 w-fit text-color-choose">Create a New Location</h1>
            <div class="divider w-full self-center"></div>

            <section class="flex flex-row space-x-9 my-2">
                <LocationsFormText type="text" name="name" id="name" class="w-2/5" placeholder="Location Name">Location Name</LocationsFormText>
                <ColorPicker id="colorPicker" />
            </section>

            <section class="flex flex-row my-2">
                <LocationsFormTextArea name="description" id="description" class="w-full" placeholder="Please provide details about where this location is, requirements for access, etc.">Description</LocationsFormTextArea>
            </section>

            <div class="form-control my-2">
                <label for="name" class="label text-primary pb-1">
                    <span class="label-text"><b>Parent Location</b></span>
                </label>
                <div class="input p-4 flex flex-row flex-wrap h-auto border-white input-bordered border-solid border-2">
                    {
                        sortedLocations.map(location => (
                            <label for={location.id}>
                                <div class="select-none join w-fit h-fit border border-solid border-white mr-4 mb-3 cursor-pointer">
                                    <div class="join-item flex justify-center items-center w-8 h-8">
                                        <input id={location.id} type="radio" name="radio-name" class="radio m-0 radio-accent border border-solid w-5 h-5" />
                                    </div>
                                    <LocationTag class="join-item" tagColor={location.color} type={location.type}>
                                        {location.name}
                                    </LocationTag>
                                </div>
                            </label>
                        ))
                    }
                </div>
            </div>
        </div>
    </form>
</Layout>

<script>
    const colorPicker = document.getElementById("colorPicker") as any;
</script>
