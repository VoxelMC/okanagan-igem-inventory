---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
const sessionCookie = Astro.cookies.get("session").value;
if (sessionCookie) {
    const decodedCookie = await auth.verifySessionCookie(sessionCookie);
    if (decodedCookie) {
        return Astro.redirect("/dashboard");
    }
}
---

<Layout title="Sign in">
    <form action="/api/auth/signin" method="post">
        <div class="mx-auto prose mt-8 flex flex-col justify-center w-10/12 items-center">
            <h1 class="mb-0 w-fit">Sign In</h1>

            <p class="mt-2">New Here? <a href="/register">Create an account</a></p>

            <section class="form-control w-3/5">
                <label for="email" class="label text-primary">
                    <span class="label-text">Email</span>
                </label>
                <input type="email" name="email" id="email" placeholder="someone@email.com" class="input input-md border-2 input-primary input-bordered border-solid" />
            </section>

            <section class="form-control w-3/5">
                <label for="password" class="label text-primary">
                    <span class="label-text">Password</span>
                </label>
                <input type="password" name="password" id="password" placeholder="someone@email.com" class="input input-md input-bordered border-2 border-solid input-primary max-w-xs" />
            </section>

            <button class="btn btn-primary w-xs mt-8 w-3/5" type="submit">Login</button>
        </div>
    </form>
</Layout>

<script>
    import { getAuth, inMemoryPersistence, signInWithEmailAndPassword } from "firebase/auth";
    import { app } from "../firebase/client";

    const auth = getAuth(app);
    // This will prevent the browser from storing session data
    auth.setPersistence(inMemoryPersistence);

    const form = document.querySelector("form") as HTMLFormElement;
    form.addEventListener("submit", async e => {
        e.preventDefault();
        const formData = new FormData(form);
        const email = formData.get("email")?.toString();
        const password = formData.get("password")?.toString();

        if (!email || !password) {
            return;
        }
        const userCredential = await signInWithEmailAndPassword(auth, email, password);
        const idToken = await userCredential.user.getIdToken();
        const response = await fetch("/api/auth/signin", {
            method: "GET",
            headers: {
                Authorization: `Bearer ${idToken}`,
            },
        });

        if (response.redirected) {
            window.location.assign(response.url);
        }
    });
</script>
